worker_processes  2;

events {
    worker_connections  1024;
}


http {
    # 全局限流
    limit_req_zone $binary_remote_addr zone=ten:10m rate=10r/s;
    include       mime.types;
    default_type  application/octet-stream;
    # 允许文件传输
    sendfile        on;
    keepalive_timeout  65;

    gzip  on;

    # 80 端口重定向
    server {
        listen 80 default_server;

        return 301 https://$host$request_uri;
    }

    # 443 端口
    server {
        root         /usr/share/nginx/html;
        listen       443 ssl default_server;

        ssl_certificate_key cert/server.key;
        ssl_certificate cert/server.crt;

        # 拦截敏感文件和路径
        location ~* (\/\.env|\/\.git|\/\.svn|\/\.hg|\/\.bashrc|\/\.bash_history|\/\.ssh|\/\.aws|\/backup|\/config\/secret) {
            deny all;
            return 403;
        }

        # 拦截常见攻击路径
        location ~* (\/admin\/login\.php|\/wp-login\.php|\/phpmyadmin|\/manager|\/remote\/login|\/api\/v1\/auth\/login) {
            deny all;
            return 403;
        }

        # 过滤恶意User-Agent
        if ($http_user_agent ~* (l9explore|l9tcpid|python-requests|curl\/7\.54\.0|wget|sqlmap|nikto|grabber|bot\/.*|scanner|crawler\/bad|Chrome\/359\.)) {
            return 403;
        }

        # 拦截畸形请求（非标准HTTP方法、异常协议）
        if ($request_method !~* (GET|POST|HEAD|PUT|DELETE|OPTIONS)) {
            return 405;
        }
        if ($request ~* (\x00|\x04|\x05|\xFF|\r\n\r\n)) {
            return 400;
        }

        # 拦截跨站请求伪造（CSRF）和恶意Referer
        if ($http_referer ~* (malicious\.com|attack\.org|\/\.\.\/)) {
            return 403;
        }

        # SPA 配置
        location / {
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # 后端服务反向代理
        location /api/ {
            # 控制文件大小
            client_max_body_size 50m;
            # 后端限流
            limit_req zone=ten burst=5;
            proxy_pass http://backend:8080/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
